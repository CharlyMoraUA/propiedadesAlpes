version: '3'
networks:
  pulsar:
    driver: bridge
  sidecar:
    driver: bridge
services:
# Start zookeeper
  zookeeper:
    image: apachepulsar/pulsar:latest
    profiles: ["pulsar"]
    container_name: zookeeper
    restart: on-failure
    networks:
      - pulsar
    volumes:
      - ./data/zookeeper:/pulsar/data/zookeeper
    environment:
      - metadataStoreUrl=zk:zookeeper:2181
    command: >
      bash -c "bin/apply-config-from-env.py conf/zookeeper.conf && \
             bin/generate-zookeeper-config.sh conf/zookeeper.conf && \
             exec bin/pulsar zookeeper"
    healthcheck:
      test: ["CMD", "bin/pulsar-zookeeper-ruok.sh"]
      interval: 10s
      timeout: 5s
      retries: 30

# Init cluster metadata
  pulsar-init:
    container_name: pulsar-init
    hostname: pulsar-init
    image: apachepulsar/pulsar:latest
    profiles: ["pulsar"]
    networks:
      - pulsar
    command: >
      bin/pulsar initialize-cluster-metadata \
               --cluster cluster-a \
               --zookeeper zookeeper:2181 \
               --configuration-store zookeeper:2181 \
               --web-service-url http://broker:8080 \
               --broker-service-url pulsar://broker:6650
    depends_on:
      zookeeper:
        condition: service_healthy

# Start bookie
  bookie:
    image: apachepulsar/pulsar:latest
    profiles: ["pulsar"]
    container_name: bookie
    restart: on-failure
    networks:
      - pulsar
    environment:
      - clusterName=cluster-a
      - zkServers=zookeeper:2181
      - metadataServiceUri=metadata-store:zk:zookeeper:2181
    depends_on:
      zookeeper:
        condition: service_healthy
      pulsar-init:
        condition: service_completed_successfully
  # Map the local directory to the container to avoid bookie startup failure due to insufficient container disks.
    volumes:
      - ./data/bookkeeper:/pulsar/data/bookkeeper
    command: bash -c "bin/apply-config-from-env.py conf/bookkeeper.conf
      && exec bin/pulsar bookie"

# Start broker
  broker:
    image: apachepulsar/pulsar:latest
    profiles: ["pulsar"]
    container_name: broker
    hostname: broker
    restart: on-failure
    networks:
      - pulsar
    environment:
      - metadataStoreUrl=zk:zookeeper:2181
      - zookeeperServers=zookeeper:2181
      - clusterName=cluster-a
      - managedLedgerDefaultEnsembleSize=1
      - managedLedgerDefaultWriteQuorum=1
      - managedLedgerDefaultAckQuorum=1
      - advertisedAddress=broker
      - advertisedListeners=external:pulsar://127.0.0.1:6650
    depends_on:
      zookeeper:
        condition: service_healthy
      bookie:
        condition: service_started
    ports:
      - "6650:6650"
      - "8080:8080"
    command: bash -c "bin/apply-config-from-env.py conf/broker.conf
      &&  exec bin/pulsar broker"
  
  # Servicios de AeroAlpes
  aeroalpes:
    container_name: aeroalpes
    hostname: aeroalpes
    image: aeroalpes/flask 
    profiles: ["aeroalpes", "monolito"]
    networks:
      - sidecar
      - pulsar
    labels:
      SidecarDiscover: "false"
    depends_on:
      - broker
      - db
    environment:
      - AEROALPES_ADDRESS=aeroalpes
      - PULSAR_ADDRESS=broker
    ports:
      - "5000:5000"
  #Mysql
  db:
    image: mysql:8
    hostname: mysqldb
    container_name: mysqldb
    cap_add:
      - SYS_NICE
    restart: always
    environment:
      - MYSQL_DATABASE=contratos
      - MYSQL_ROOT_PASSWORD=adminadmin
    profiles: ["aeroalpes", "db"]
    networks:
      - pulsar
    ports:
      - '3307:3306'


  inquilinos:
    container_name: inquilinos
    hostname: inquilinos
    image: inquilinos/flask 
    profiles: ["inquilinos", "monolito"]
    networks:
      - sidecar
      - pulsar
    labels:
      SidecarDiscover: "false"
    depends_on:
      - broker
      - db-inquilinos
    environment:
      - AEROALPES_ADDRESS=inquilinos
      - PULSAR_ADDRESS=broker
      - DB_USERNAME=root
      - DB_PASSWORD=adminadmin
      - DB_HOSTNAME=db-inquilinos:3306
    ports:
      - "5000:5000"
  #Mysql
  db-inquilinos:
    image: mysql:8
    hostname: db-inquilinos
    container_name: db-inquilinos
    cap_add:
      - SYS_NICE
    restart: always
    environment:
      - MYSQL_DATABASE=contratos
      - MYSQL_ROOT_PASSWORD=adminadmin
    profiles: ["inquilinos", "db-inquilinos"]
    networks:
      - pulsar
    ports:
      - '3308:3306'

  #Servicio de compa√±ias
  companias:
      container_name: companias
      hostname: companias
      image: companias/flask 
      profiles: ["companias", "monolito"]
      networks:
        - sidecar
        - pulsar
      labels:
        SidecarDiscover: "false"
      depends_on:
        - broker
        - db_companias
      environment:
        - AEROALPES_ADDRESS=companias
        - PULSAR_ADDRESS=broker
      ports:
        - "5002:5000"
  #Mysql
  db_companias:
    image: mysql:8
    hostname: db_companias
    container_name: db_companias
    cap_add:
      - SYS_NICE
    restart: always
    environment:
      - MYSQL_DATABASE=companias
      - MYSQL_ROOT_PASSWORD=adminadmin
    profiles: ["companias", "db_companias"]
    networks:
      - pulsar
    ports:
      - '3309:3306'
  
  propiedades:
    container_name: propiedades
    hostname: propiedades
    image: propiedades/flask 
    profiles: ["propiedades", "monolito"]
    networks:
      - sidecar
      - pulsar
    labels:
      SidecarDiscover: "false"
    depends_on:
      - broker
      - db
    environment:
      - AEROALPES_ADDRESS=propiedades
      - PULSAR_ADDRESS=broker
    ports:
      - "5000:5000"
  #Mysql
  db-propiedades:
    image: mysql:8
    hostname: db-propiedades
    container_name: db-propiedades
    cap_add:
      - SYS_NICE
    restart: always
    environment:
      - MYSQL_DATABASE=propiedades
      - MYSQL_ROOT_PASSWORD=adminadmin
    profiles: ["propiedades", "db-propiedades"]
    networks:
      - pulsar
    ports:
      - '3310:3306'